% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.R
\name{brand_theme}
\alias{brand_theme}
\title{Apply Bootstrap brand to base, lattice and ggplot2 graphics}
\usage{
brand_theme(
  file = NULL,
  font = NULL,
  bg = "background",
  fg = "foreground",
  accent = c("primary", "secondary"),
  sequential = NULL,
  qualitative = NULL,
  gradient = c("orange", "light", "green"),
  n = 20,
  alpha = 0.9,
  ...
)
}
\arguments{
\item{file}{path to \verb{_brand.yml} brand configuration file, normally this file is auto-detected in the working tree, but may be specified here to swap branding dynamically}

\item{font}{one of \verb{_brand.yml} font families (\code{base}, \code{monospace}, \code{headings}). Uses the brand's \code{base} family by default.}

\item{bg}{a background color.}

\item{fg}{a foreground color.}

\item{accent}{a color for making certain graphical markers 'stand out'
(e.g., the fitted line color for \code{\link[ggplot2:geom_smooth]{ggplot2::geom_smooth()}}).
Can be 2 colors for lattice (stroke vs fill accent).}

\item{sequential}{a color palette for graphical markers that encode
numeric values. Can be a vector of color codes or a
\code{\link[thematic:sequential_gradient]{sequential_gradient()}} object.}

\item{qualitative}{a color palette for graphical markers that encode
qualitative values (won't be used in ggplot2 when the number of data
levels exceeds the max allowed colors). Defaults to \code{\link[thematic:okabe_ito]{okabe_ito()}}.}

\item{gradient}{Vector of Bootstrap color (names) to use in plot gradients}

\item{n}{Number of colors to interpolate in plot gradients (default: 20)}

\item{alpha}{Transparency for color scales between 0 and 1 (default: .9)}
}
\value{
a theme object as a list
}
\description{
Applies Bootstrap branding to R graphics using \code{thematic} R package utilities. This function behaves like \code{thematic::thematic_on()} but instead of passing individual colors and fonts, the user can provide an external \verb{_brand.yml} configuration file. \code{brand_on} takes color and font variable names per Boostrap branding (hence, do not provide hex color codes, edit \verb{_brand.yml} instead).
}
\details{
Typically charts will use Boostrap \strong{sans-serif} font, but as of compiling that variable is not available in \code{brand.yml} schema, so \code{brand_theme} will take the \strong{first} font declared in the \strong{typography} tree.
}
\examples{
thematic::thematic_set_theme(brand_theme())

# base
hist(rchisq(100, df=4), freq=FALSE, ylim=c(0, 0.2),
col=1:11, border="white", xlab=NA)
grid(NA, NULL, col="white")
curve(dchisq(x, df=4), col=3, lty=2, lwd=2, add=TRUE)

# lattice
lattice::show.settings()

# ggplot2
require(ggplot2)
ggplot(mtcars, aes(factor(carb), mpg, fill=carb)) +
  geom_col() +
  labs(
    x = "carb", y = NULL,
    title = "Default Plot with Bootstrap Branding",
    subtitle = "My very long subtitle with many units",
    caption = "My very long plot caption with many references.")

ggplot(mtcars, aes(factor(carb), mpg, fill=carb)) +
  geom_col()

ggplot(mtcars, aes(factor(carb), mpg, fill=carb)) +
  geom_col() +
  guides(y=guide_axis(position="right")) +
  theme_brand(base_bg="light")

}
